var e,t,s,i,n,r,a,o=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},h=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class c{constructor(c){e.set(this,new Map),t.set(this,new Map),s.set(this,new Map),i.set(this,void 0),n.set(this,void 0),r.set(this,void 0),a.set(this,void 0),this.cancel=async e=>(h(this,s).get(e)&&(h(this,s).delete(e),this.executeObservers([e])),h(this,i).call(this,e)),this.delete=async(t,i)=>{const r=h(this,s).get(t),a=h(this,e).get(t);return r&&h(this,s).delete(t),a&&h(this,e).delete(t),(r||a)&&this.executeObservers([t]),h(this,n).call(this,t,i)},this.rename=async(t,i)=>{const n=h(this,s).get(t),a=h(this,e).get(t);return n&&h(this,s).set(t,Object.assign(Object.assign({},n),{file:Object.assign(Object.assign({},n.file),{name:i})})),a&&h(this,e).set(t,Object.assign(Object.assign({},a),{name:i})),(n||a)&&this.executeObservers([t]),h(this,r).call(this,t,i)},this.upload=async(e,t)=>{const{id:i,name:n,type:r}=e,o=await e.hash(),c=URL.createObjectURL(e.blob),l={hash:o,id:i,name:n,type:r,url:c};h(this,s).set(e.id,{file:l,progress:0}),this.executeObservers([i]);const u=await h(this,a).call(this,e,t),d=Object.assign(Object.assign({},l),u);return c!==d.url&&URL.revokeObjectURL(l.url),h(this,s).set(e.id,{file:d,progress:1}),this.executeObservers([i]),d},o(this,i,c.cancel),o(this,n,c.delete),o(this,r,c.rename),o(this,a,c.upload)}static inMemory(e={}){return l(Object.assign({delay:{}},e))}get(t){return h(this,e).get(t)}getIds(){const t=[];return h(this,e).forEach(((e,s)=>t.push(s))),h(this,s).forEach(((e,s)=>t.push(s))),Array.from(new Set(t))}setFiles(t){const i=new Map;for(const e of t)h(this,s).delete(e.id),i.set(e.id,e);const n=this.getIds().filter((t=>{const s=h(this,e).get(t),n=i.get(t);return!this.isEqual(s,n)}));o(this,e,i),n.length&&this.executeObservers(n)}setProgress(e,t){const i=h(this,s).get(e);i&&(h(this,s).set(e,Object.assign(Object.assign({},i),{progress:t})),this.executeObservers([e]))}subscribe(e,s){return h(this,t).set(e,s),e(this.getDataObject(s)),()=>this.unsubscribe(e)}unsubscribe(e){h(this,t).delete(e)}executeObservers(e){h(this,t).forEach(((t,s)=>{t&&!e.some((e=>t.indexOf(e)>=0))||s(this.getDataObject(t))}))}getDataObject(t){return this.getIds().reduce(((i,n)=>{var r;if(t&&t.indexOf(n)<0)return i;const a=h(this,e).get(n),o=h(this,s).get(n);return i[n]={file:a||(null==o?void 0:o.file),progress:null!==(r=null==o?void 0:o.progress)&&void 0!==r?r:1},i}),{})}isEqual(e,t){if(null==e||null==t)return e===t;if("number"==typeof e||"number"==typeof t)return e===t;for(const s in e)if(e[s]!==t[s])return!1;return!0}}e=new WeakMap,t=new WeakMap,s=new WeakMap,i=new WeakMap,n=new WeakMap,r=new WeakMap,a=new WeakMap;const l=e=>{const t=new Map,s=new Map,i=()=>{n.setFiles(Array.from(s.values()))},n=new c({cancel:async e=>{const s=t.get(e);s&&(window.clearTimeout(s),t.delete(e))},delete:async e=>{s.delete(e),i()},rename:async(e,t)=>{const n=s.get(e);n&&(s.set(n.id,Object.assign(Object.assign({},n),{name:t})),i())},upload:n=>{const{min:r=2e3,max:a=5e3}=e.delay;return new Promise((e=>{const o=Math.random()*(a-r+1)+r,h=window.setTimeout((async()=>{const r={hash:await n.hash(),id:n.id,name:n.name,type:n.type,url:URL.createObjectURL(n.blob)};t.delete(n.id),s.set(n.id,r),e(r),i()}),o);t.set(n.id,h)}))}});return n};class u{constructor(e,t={}){this.current=null,this.nodes=[],this.offset=0,this.timeout=0,this.handleScroll=()=>{this.timeout&&window.cancelAnimationFrame(this.timeout),this.timeout=window.requestAnimationFrame((()=>this.detect()))},this.selector=e,this.options=Object.assign({class:"active",scroll:window},t),this.reload(),window.addEventListener("resize",this.handleScroll),this.options.scroll.addEventListener("scroll",this.handleScroll)}get active(){const e=this.nodes[this.nodes.length-1];if(e&&this.bottom&&this.isVisible(e.section))return e;for(let e=this.nodes.length-1;e>=0;e--)if(this.isVisible(this.nodes[e].section))return this.nodes[e];return null}get bottom(){const{root:e}=this;return e.scrollHeight-window.innerHeight<=e.scrollTop}get root(){return document.scrollingElement||document.documentElement}destroy(){this.current&&this.deactivate(this.current),window.removeEventListener("resize",this.handleScroll),this.options.scroll.removeEventListener("scroll",this.handleScroll)}detect(){const{active:e}=this,t=this.current;if(t){if(t===e)return;this.deactivate(t)}e&&this.activate(e),this.current=e}reload(){const{root:e}=this,t=e.querySelectorAll(this.selector);this.nodes=Array.from(t).reduce(((e,t)=>{const s=decodeURIComponent(("hash"in t&&t.hash||"").slice(1)),i=document.getElementById(s);return i?[...e,{nav:t,section:i}]:e}),[]),this.offset=Math.min(...this.nodes.map((e=>e.section.offsetTop))),this.detect()}activate(e){e.nav.classList.add(this.options.class)}deactivate(e){e.nav.classList.remove(this.options.class)}isVisible(e,t){const s=e.getBoundingClientRect();return t?s.bottom<window.innerHeight:s.top<=this.offset}}const d=e=>/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e),w=new class{constructor(){this.rules=new Map}async validate(e,t,s={}){const{value:i}=t,n=Object.assign(Object.assign({},s),{el:t,tag:t.tagName.toLowerCase()}),r=e.replace(/\s/g,"").split("|").map((e=>{const[t,...s]=e.split(":"),i=s.join(":");return{rule:t,args:i?i.split(","):[]}})),a=[];for(const{rule:e,args:t}of r){const s=await this.validateRule(e,t,i,n);s&&a.push(s)}return a}async validateRule(e,t=[],s,i){const n=this.rules.get(e);if(!n)throw new Error(`[${i.tag}] Unknown validation rule: ${e}`);const r=await n(s,t,i),a="boolean"==typeof r?"":r.message;if("boolean"==typeof r?r:r.valid)return null;const o={args:t,message:a,meta:i,rule:e,value:s};return{rule:e,message:this.translator?await this.translator(o):a,meta:i}}};w.rules.set("alpha",(async(e,t,s)=>{if("string"!=typeof e){const e=m("alpha",s);throw new Error(e)}return{valid:/^[A-Z]*$/i.test(e),message:"This field should only contain alphabetic characters [A-Z]."}})),w.rules.set("alpha-dash",(async(e,t,s)=>{if("string"!=typeof e){const e=m("alpha-dash",s);throw new Error(e)}return{valid:/^[0-9A-Z_-]*$/i.test(e),message:"This field should only contain alphanumeric characters or dashes [0-9A-Z_-]."}})),w.rules.set("alpha-num",(async(e,t,s)=>{if("string"!=typeof e){const e=m("alpha-num",s);throw new Error(e)}return{valid:/^[0-9A-Z]*$/i.test(e),message:"This field should only contain alphanumeric characters [0-9A-Z]."}})),w.rules.set("alpha-spaces",(async(e,t,s)=>{if("string"!=typeof e){const e=m("alpha-spaces",s);throw new Error(e)}return{valid:/^[A-Z\s]*$/i.test(e),message:"This field should only contain alphabetic characters or whitespace [A-Zs]."}})),w.rules.set("between",(async(e,t,s)=>{if("string"!=typeof e&&"number"!=typeof e){const e=m("between",s);throw new Error(e)}const i=t.map((e=>Number(e))).filter((e=>!isNaN(e)));if(2!==i.length)throw new Error(`[${s.tag}] The 'between' validation rule requires two numeric argument (e.g. between:5,10).`);const[n,r]=i;return{valid:n<=Number(e)&&r>=Number(e),message:`This field should contain a value between ${n} and ${r}.`}})),w.rules.set("digits",(async(e,t,s)=>{if("string"!=typeof e&&"number"!=typeof e){const e=m("between",s);throw new Error(e)}const i=Number(t[0]);if(isNaN(i))throw new Error(`[${s.tag}] The 'digits' validation rule requires a numeric argument (e.g. digits:5).`);const n=""+e;return{valid:/^[0-9]*$/.test(n)&&n.length===i,message:`This field requires ${i} digits.`}})),w.rules.set("email",(async(e,t,s)=>{if(void 0!==e&&"string"!=typeof e){const e=m("email",s);throw new Error(e)}return{valid:!e||d(e),message:"This is not a valid email."}})),w.rules.set("in",(async(e,t)=>({valid:Array.isArray(e)?e.every((e=>t.indexOf(e)>=0)):t.indexOf(""+e)>=0,message:"This value is not allowed."}))),w.rules.set("is",(async(e,t)=>{const s=t.length>1?t:t[0];return{valid:Array.isArray(s)?Array.isArray(e)&&!e.length||JSON.stringify(s)===JSON.stringify(e):null==s||s===""+e,message:`The value should be: "${s}".`}})),w.rules.set("max",(async(e,t,s)=>{if("boolean"==typeof e){const e=m("max",s);throw new Error(e)}const{el:i}=s,n=p(i),r=f(t[0],i);return Array.isArray(e)?{valid:n<=r,message:`This field may not exceed ${r} options.`}:"type"in i&&"date"===i.type?{valid:!e||n<=r,message:`This field max not not exceed ${new Date(r).toISOString().slice(0,10)}.`}:"type"in i&&"number"===i.type||"number"==typeof e?{valid:null==e||n<=r,message:`This field may not exceed ${r}.`}:{valid:!e||n<=r,message:`This field may not exceed ${r} characters.`}})),w.rules.set("min",(async(e,t,s)=>{if("boolean"==typeof e){const e=m("max",s);throw new Error(e)}const{el:i}=s,n=p(i),r=f(t[0],i);return Array.isArray(e)?{valid:0===n||n>=r,message:`This requires at least ${r} options.`}:"type"in i&&"date"===i.type?{valid:!e||n>=r,message:`This field must be after ${new Date(r).toISOString().slice(0,10)}.`}:"type"in i&&"number"===i.type||"number"==typeof e?{valid:null==e||n>=r,message:`This field should be ${r} or higher.`}:{valid:!e||n>=r,message:`This field requires at least ${r} characters.`}})),w.rules.set("numeric",(async(e,t,s)=>{if("string"!=typeof e&&"number"!=typeof e){const e=m("numeric",s);throw new Error(e)}return{valid:/^[0-9]+$/.test(""+e),message:"This field should only contain numeric characters [0-9]."}})),w.rules.set("phone",(async(e,t,s)=>{if("string"!=typeof e){const e=m("phone",s);throw new Error(e)}return{valid:/^([\+][0-9]{1,3}([ \.\-])?)?([\(]{1}[0-9]{3}[\)])?([0-9A-Z \.\-]{1,32})((x|ext|extension)?[0-9]{1,4}?)$/.test(e),message:"This field should contain a phone number"}})),w.rules.set("postal-code",(async(e,t,s)=>{if("string"!=typeof e){const e=m("postal-code",s);throw new Error(e)}return{valid:/^[1-9][0-9]{3}(?!SA|SD|SS)[A-Z]{2}$/.test(e),message:"This field should contain a Dutch postal code"}})),w.rules.set("required",(async e=>({valid:Array.isArray(e)?!!e.length:0===e||!!e,message:"This field is required."})));const m=(e,t)=>`[${t.el}] Unsupported validation rule: ${e}`,p=e=>Array.isArray(e.value)?e.value.length:"type"in e&&"date"===e.type?new Date(e.value||0).getTime():"type"in e&&"number"===e.type||"number"==typeof e.value?Number(e.value):(""+e.value).length,f=(e,t)=>"type"in t&&"date"===t.type?new Date(e||0).getTime():null==e?0:Number(e);export{c as F,u as S,d as i,w as v}