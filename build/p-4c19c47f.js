class t{static v4(){return"10000000-1000-4000-8000-100000000000".replace(/[018]/g,(t=>{const n=crypto.getRandomValues(new Uint8Array(1))[0],e=parseInt(t,10);return(e^n&15>>e/4).toString(16)}))}}var n,e=function(t,n,e){if(!n.has(t))throw new TypeError("attempted to set private field on non-instance");return n.set(t,e),e};class r{constructor(t){n.set(this,void 0);const r=this._parseColor(t);if(null==r)throw new Error("Unknown color: "+t);e(this,n,r)}get hex(){const{rgba:t}=this,n=t=>Math.round(t).toString(16).padStart(2,"0");return`#${n(t.r)}${n(t.g)}${n(t.b)}${1==t.a?"":n(255*t.a)}`}get rgba(){return function(t,n){if(!n.has(t))throw new TypeError("attempted to get private field on non-instance");return n.get(t)}(this,n)}static mix(t,n,e=.5){const{r:s,g:a,b:c,a:o}=t.rgba,{r:i,g:b,b:f,a:u}=n.rgba,p=2*e-1,l=o-u,w=((p*l==-1?p:(p+l)/(1+p*l))+1)/2,g=1-w;return new r({r:w*s+g*i,g:w*a+g*b,b:w*c+g*f,a:o*e+u*(1-e)})}static multiply(t,n){const{r:e,g:s,b:a}=t.rgba,{r:c,g:o,b:i}=n.rgba;return new r({r:e*c/255,g:s*o/255,b:a*i/255,a:1})}mix(t){e(this,n,Object.assign({},r.multiply(this,t).rgba))}multiply(t){e(this,n,Object.assign({},r.multiply(this,t).rgba))}_parseColor(t){return t instanceof r?t.rgba:"string"!=typeof t?t:t.startsWith("#")?this._parseHex(t):this._parseRgba(t)}_parseHex(t){const n=t.replace(/^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,((t,n,e,r,s)=>{const a=null!=s?s:"f";return"#"+n+n+e+e+r+r+a+a}));var e=/^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(n);if(!e)return null;const r=parseInt(e[4],16);return{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16),a:isNaN(r)?1:r/255}}_parseRgba(t){const n=t.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*([\d\.]+)(%)?)?\)$/);return n?{r:parseInt(n[1],10),g:parseInt(n[2],10),b:parseInt(n[3],10),a:"%"!==n[5]?parseFloat(n[4]):parseInt(n[4],10)/100}:null}}n=new WeakMap;const s=(t,n="#fff",e="#fff")=>{const s=new r(t),a=new r(n),c=new r(e);if(!s||!a||!c)return null;const o=c,i=r.multiply(s,s);return{c300:r.mix(s,o,.7).hex,c400:r.mix(s,o,.85).hex,c500:s.hex,c600:r.mix(s,i,.87).hex,c700:r.mix(s,i,.7).hex,con1:new r(Object.assign(Object.assign({},a.rgba),{a:.87})).hex,con2:new r(Object.assign(Object.assign({},a.rgba),{a:.6})).hex,con3:new r(Object.assign(Object.assign({},a.rgba),{a:.38})).hex,con4:new r(Object.assign(Object.assign({},a.rgba),{a:.1})).hex}},a=(t,n)=>{const e=getComputedStyle(t),s=e.getPropertyValue(`--bce-c500-${n}`).trim(),a=e.getPropertyValue(`--bce-con1-${n}`).trim();return`${s} ${new r(Object.assign(Object.assign({},new r(a).rgba),{a:1})).hex}`},c=(t,n,e,r)=>{const[a,c]=e.split(" "),o=s(a,c,r);for(const e of Object.keys(o||{}))t.style.setProperty(`--bce-${e}-${n}`,o[e])};export{r as C,t as U,s as c,a as g,c as s}